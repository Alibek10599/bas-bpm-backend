stages:
  - build
  - deploy_dev_docker
  - deploy_k8s

build:
  stage: build
  rules:
      - if: $CI_COMMIT_BRANCH == "master" &&
            $CI_COMMIT_MESSAGE =~ /.*dodeploy.*/
  image: docker:27.5.1
  services:
    - docker:27.5.1-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_DRIVER: overlay2
  before_script:
    - echo "y" | docker system prune -a
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker info
  script:
    - ls -l
    - echo $notifications_env > apps/notifications/.env
    - docker compose build
    - docker compose images
    - docker compose push

deploy_dev_docker:
  stage: deploy_dev_docker
  rules:
      - if: $CI_COMMIT_BRANCH == "master" &&
            $CI_COMMIT_MESSAGE =~ /.*dodeploy.*/
  image: alpine
  before_script:
    - echo "$dev_server_ip"
    - 'command -v ssh-agent >/dev/null || ( apk add gettext openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$CI_ROBOT_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - touch ~/.ssh/config
    - touch ~/.ssh/known_hosts
    - chmod -R 400 ~/.ssh
    - ssh-keyscan "$dev_server_ip" >> ~/.ssh/known_hosts
  script:
    - ls -l
    - echo $auth_env > apps/auth/.env
    - echo $notifications_env > apps/notifications/.env
    - ssh root@"$dev_server_ip" "mkdir -p /repo/$CI_PROJECT_PATH; cd /repo/$CI_PROJECT_PATH; ls -l; docker compose down --volumes --rmi all --remove-orphans; echo 'y' | docker system prune -a; sleep 5; docker ps -a; rm -rf /repo/$CI_PROJECT_PATH/*"  
    - scp templates/* root@"$dev_server_ip":/repo/"$CI_PROJECT_PATH"/
    - ssh root@"$dev_server_ip" "cd /repo/$CI_PROJECT_PATH; mkdir -p apps/auth; mkdir -p apps/notifications; ls -l"
    - scp apps/auth/.env root@"$dev_server_ip":/repo/"$CI_PROJECT_PATH"/apps/auth/
    - scp apps/notifications/.env root@"$dev_server_ip":/repo/"$CI_PROJECT_PATH"/apps/notifications/
    - ssh root@"$dev_server_ip" "cd /repo/; cd $CI_PROJECT_PATH; ls -l; docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY; docker compose up -d; sleep 5; docker ps -a; sleep 30; docker compose logs"

deploy_k8s:
  stage: deploy_k8s
  rules:
      - if: $CI_COMMIT_BRANCH == "master" &&
            $CI_COMMIT_MESSAGE =~ /.*dodeploy.*/
  image: alpine
  when: manual
  script:
    - apk update  && apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p $HOME/.kube
    - echo -n "$K8S_DEV_KUBECONFIG" > $HOME/.kube/config    
    - kubectl config view | grep server
    - kubectl apply -R -f k8s/sleeper/templates

